/*! Start-CSS Experimental. See SCSS file for documentation. */
/*-------------------------------------------------------------------------------------------------|

    EXPERIMENTAL
    ============================================================================================

|-------------------------------------------------------------------------------------------------*/


$s__checkradio-background-color: #fff !default;
$s__checkradio-text-color: $s__base-text-color !default;
$s__checkradio-border-color: $s__checkradio-text-color !default;
$s__checkradio-border-width: $s__border-width !default;
$s__checkradio-border-style: $s__border-style !default;

@if $s__experimental == true {
    /*
        From https://github.com/mozdevs/cssremedy/blob/master/remedy.css
        Immediately jump any animation to the end point if the user has set their device to "prefers
        reduced motion".
        This could create bad, unintended consequences. Remove as needed, and write your own appropriate
        code for prefers-reduced-motion.

    */
    @media (prefers-reduced-motion: reduce) {
        * {
            animation-duration: 0.001s !important;
            transition-duration: 0.001s !important;
        }
    }


    /*
        MS pseudo-elements.

        Note - there's some odd spacing issues between the containing element and the pseudo-elements,
        where background colors can show through unexpectedly, so there are some tweaks to rectify
        this.
    */
    //#{$s__namespace}[type="file"]::-ms-value {
    //    margin-right: 0;
    //    margin-left: -6px;
    //
    //    padding-left: 0.5em;
    //
    //    border: 0;
    //    border-radius: $s__input-border-radius;
    //
    //    background: $s__input-background-color;
    //}
    //
    //#{$s__namespace}[type="file"]:focus::-ms-value {
    //    box-shadow: $s__input-focus-shadow;
    //    outline: 0;
    //}


    /*
        1. IE10 doesn't like rem so convert to px.
    */
    //#{$s__namespace}[type="file"]::-ms-browse {
    //    min-height:  $s__input-min-height;
    //
    //    padding-right: $s__input-h-padding;
    //    padding-right: #{s__calc-px-from-rem($s__input-h-padding)}\9; /* 1 */
    //    padding-left: $s__input-h-padding;
    //    padding-left: #{s__calc-px-from-rem($s__input-h-padding)}\9; /* 1 */
    //
    //    border-width: 0 0 0 $s__input-border-width;
    //    border-style: $s__input-border-style;
    //    border-color: $s__input-border-color;
    //    border-top-right-radius: $s__input-border-radius - $s__input-border-width;
    //    border-bottom-right-radius: $s__input-border-radius - $s__input-border-width;
    //
    //    color: #fff;
    //    background-color: $s__base-ui-color;
    //
    //    font-weight: inherit;
    //    font-style: inherit;
    //    font-size: inherit;
    //    font-family: inherit;
    //
    //    text-transform: none;
    //
    //    cursor: pointer;
    //}

        //[type="file"]:hover::-ms-browse,
        //[type="file"]:active::-ms-browse,
        //[type="file"]:focus::-ms-browse {
        //    box-shadow: $s__button-focus-shadow;
        //    outline: 0;
        //}

    /*
        1. Spacing height + 2 sets of input padding, minus border width.
    */
    //#{$s__namespace}[type="file"]::-webkit-file-upload-button {
    //{$s__namespace}[type="file"]::file-selector-button {
    //   //height: calc(#{($s__base-rem-space-unit * 1.25)} - #{$s__input-border-width * 2}); /* 1 */
    //   //
    //   //padding-top: 0;
    //   //padding-right: $s__input-h-padding;
    //   //padding-bottom: 0;
    //   //padding-left: $s__input-h-padding;
    //   //
    //   //border-width: 0 $s__input-border-width 0 0;
    //   //border-style: $s__input-border-style;
    //   //border-color: $s__input-border-color;
    //   //border-radius: 0;
    //   //
    //   //color: #fff;
    //   //background-color: $s__base-ui-color;
    //   //
    //   //font-weight: inherit;
    //   //font-style: inherit;
    //   //font-size: inherit;
    //   //font-family: inherit;
    //   //
    //   //vertical-align: top;
    //   //
    //   //text-transform: none;
    //   //
    //   //cursor: pointer;
    //   //
    //   //-webkit-appearance: none;
    //   @include s__button;
    //   margin: 0 $s__sz-xs 0 0;
    //   border-top-right-radius: 0;
    //   border-bottom-right-radius: 0;
    //   @supports (color: oklch(from red l c h)) {
    //       color: oklch(from var(--background-color) var(--l) 0 h / 0.9);
    //   }
    //

    //{$s__namespace}[type="file"]::-webkit-file-upload-button {
    //   @include s__button;
    //   margin: 0 $s__sz-xs 0 0;
    //   border-top-right-radius: 0;
    //   border-bottom-right-radius: 0;
    //   @supports (color: oklch(from red l c h)) {
    //       color: oklch(from var(--background-color) var(--l) 0 h / 0.9);
    //   }
    //

    //@if $s__use-focus-shadow {
    //    #{$s__namespace}[type="file"]:hover::-webkit-file-upload-button,
    //    #{$s__namespace}[type="file"]:active::-webkit-file-upload-button,
    //    #{$s__namespace}[type="file"]:focus::-webkit-file-upload-button {
    //
    //        &:focus {
    //            outline: 0;
    //            box-shadow: $s__outline-shadow;
    //        }
    //    }
    //}

    /*
        Safari refuses to adjust the height of select[multiple] options.
        The only way I've managed to get it to adhere to the vertical rhythm is by adjust the font-size
        on the select:
        select[multiple] {
            font-size: 20px;
            margin-bottom: 8px;
        }

        This is no good, of course as it makes the text HUGE. Scaling it back with transform works:

            transform-origin: top;
            transform: scale(0.7);

        but of course the gaps around it are huge as well.

        Hand-adjusting margins here so I can test the rest of the elements on grid properly and moving
        on:
    */
    // _:scope, _:future, _:not(*:root), .selector { property:value; }
    // Chrome 27+, Safari 6.1+ (and Opera 14+)
    /*
    _:scope, _:future, _:not(*:root), select[size="2"]  { margin-bottom: 0; }
    _:scope, _:future, _:not(*:root), select[size="3"]  { margin-bottom: 0; }
    _:scope, _:future, _:not(*:root), select[size="4"]  { margin-bottom: 0; }
    _:scope, _:future, _:not(*:root), select[size="5"]  { margin-bottom: calc(0.9rem - 2px); }
    _:scope, _:future, _:not(*:root), select[size="6"]  { margin-bottom: calc(0.4rem - 2px); }
    _:scope, _:future, _:not(*:root), select[size="7"]  { margin-bottom: calc(1.1rem - 2px); }
    _:scope, _:future, _:not(*:root), select[size="8"]  { margin-bottom: calc(0.6rem - 2px); }
    _:scope, _:future, _:not(*:root), select[size="9"]  { margin-bottom: calc(1.3rem - 2px); }
    _:scope, _:future, _:not(*:root), select[size="10"] { margin-bottom: calc(0.8rem - 2px); }
    */



    // _:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root .selector { property:value; }
    // Safari 6.2,7.1+ (Not iOS)
    _:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="2"]  { margin-bottom: calc(#{$s__base-rem-space-unit} - 0.6em - #{$s__input-border-width * 2}); }
    _:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="3"]  { margin-bottom: calc(#{$s__base-rem-space-unit} - 0.6em - #{$s__input-border-width * 2}); }
    _:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="4"]  { margin-bottom: calc(#{$s__base-rem-space-unit} - 0.6em - #{$s__input-border-width * 2}); }
    _:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="5"]  { margin-bottom: calc(#{$s__base-rem-space-unit} - 1.1em - #{$s__input-border-width * 2}); }
    _:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="6"]  { margin-bottom: calc(#{$s__base-rem-space-unit} - 0.85em - #{$s__input-border-width * 2}); }
    _:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="7"]  { margin-bottom: calc(#{$s__base-rem-space-unit} - 0.6em - #{$s__input-border-width * 2}); }
    _:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="8"]  { margin-bottom: calc(#{$s__base-rem-space-unit} - 1.1em - #{$s__input-border-width * 2}); }
    _:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="9"]  { margin-bottom: calc(#{$s__base-rem-space-unit} - 0.85em - #{$s__input-border-width * 2}); }
    _:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="10"] { margin-bottom: calc(#{$s__base-rem-space-unit} - 0.6em - #{$s__input-border-width * 2}); }

    // Reset Chrome and Opera:
    // @media screen and (-webkit-min-device-pixel-ratio:0) and (min-resolution:.001dpcm) { .selector { property:value; } }
    // Chrome 29+ (and Opera 16+)
    ///*
    //@media screen and (-webkit-min-device-pixel-ratio:0) and (min-resolution:.001dpcm) {
    //    select[size] { margin-bottom: calc(#{($s__base-rem-space-unit / 8) * 3} - #{$s__input-border-width * 2}); }
    //}
    //*/

}

/*
    These may be experimental, but they actually make Safari usable with a keyboard, so long as
    you enable an "Accessibility" setting located in the advanced tab of Safari preferences.
    ("Press TAB to highlight each item on a web page.)
    That is - the default outline focus style works, but shadows don't unless appearance: none
    is used.

    1. Safari 9.1 doesn't recognize 'auto' but I suspect others won't recognize 'initial', so
       keeping both for now.
*/
@if $s__experimental_checkradios == true {
    @supports (-webkit-appearance: none) or (-moz-appearance: none) {
        input[type="checkbox"],
        input[type="radio"] {
            position: relative;

            display: inline-block;

            width: 1em;

            height: 1em;
            min-height: auto; /* 1 */
            min-height: initial; /* 1 */

            border-width: $s__checkradio-border-width;
            border-style: $s__checkradio-border-style;
            border-color: $s__checkradio-border-color;

            background-color: $s__checkradio-background-color;

            -webkit-appearance: none;
               -moz-appearance: none;
        }

        input[type="radio"] {
            border-radius: 50%;
        }

        input[type="radio"]:checked {
            background-image: radial-gradient(ellipse at center, rgba($s__checkradio-text-color,1) 0%,rgba($s__checkradio-text-color,1) 35%,rgba(0,0,0,0) 35%,rgba(0,0,0,0) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
        }

        input[type="checkbox"]:checked::after {
            content: "";
            display: inline-block;
            width: 0.6em;
            height: 0.3em;
            border: solid $s__checkradio-text-color;
            border-width: 0 0 0.125em 0.125em;

            position: absolute;
            left: 50%;
            top: 50%;

            transform: translate(-50%, -70%) rotate(-50deg);
        }

        /*
            Turn off the outline we reinstated for non-experimental styles in Safari:
        */
        _::-webkit-full-page-media, _:future, :root #{$s__namespace}[type="checkbox"]:focus,
        _::-webkit-full-page-media, _:future, :root #{$s__namespace}[type="radio"]:focus {
            outline: 0;
        }
    }

}