/*
$f__class-namespace: c-;
$ff__include_class_cta_button:    false;
$ff__include_class_bordered:      false;
$ff__include_class_padded:        false;
$ff__include_class_subtitle:      false;
$ff__include_class_tagline:       false;
$ff__include_class_composite:     false;
$ff__include_class_custom_inputs: false;
$ff__include_class_poem:          false;
*/
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Settings

    Fall-Back is designed for use with the basic
    [CSS Mustard Cut](https://github.com/Fall-Back/CSS-Mustard-Cut)

    This determines a browser support base of:

    IE 9+, FF 8+, Opera 12, [Chrome 29+, Android ~4.4+]
    Chrome 29+, Opera 16+, Safari 6.1+, iOS 7+, Android ~4.4+


    Any double-classing (e.g. `.class.class`) is deliberate and intended to increase specifity.
    This allows any applicable Start-CSS declarations to be overidden.
    E.g. `.{pattern} .{pattern}__child` would `a[href]`, but just `.{pattern}` wouldn't, so we use
    `.{pattern}.{pattren}`

    https://coolors.co/50514f-f25f5c-ffe066-247ba0-70c1b3

|-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Functions
|-------------------------------------------------------------------------------------------------*/
/*
    Colour contrast from https://gist.github.com/FStop/8959422

    Usage:
    @if f__color_contrast($colour, #fff) < 2 {
        color: #333;
    }
    @else{
        color: #fff;
    }
*/
/* Awesome contrast ratio function
* via https://gist.github.com/voxpelli/6304812
**/
/*-------------------------------------------------------------------------------------------------|
    Fall-Back Start-CSS Mixins
|-------------------------------------------------------------------------------------------------*/
/*
    Apply a border and a padding that offsets the border-width from one spacing unit so as not to
    affect the vertical rhythm.
    Note the Opera Mini doesn't support `calc` so we need to include normal padding for that
    browser.
    Also, since we're supporting FF 8+, we're including -moz-calc for versions up to 16.
    I may consider removing this as those browsers are dead, but I'm just being thorough for now.

    Note on the 'last margin' issue/hack:
    The pseudo element is intended to provide a collapsible margin to cancel out any 'trailing'
    margins from content elements. However, since we're reducing the whole padding space by the
    border-width to maintain the vertical rhythm, that margin is also less, BUT the content margin
    is NOT being reduced, so that wins out - the reduction is ignored.
    If the pseudo element bottom margin is adjusted to cancel out the height (1px) AS WELL AS
    the amount of border-width, but the last element DOES NOT have a margin, then the space becomes
    too small.
    If pseudo-element height is 0, it doesn't work in IE, Chrome, Safari, without inline-block
*/
/*
    This button mixin isn't really meant for generating specific/themed _types_ of button - there
    would be too much code duplication for that.
    Instead, this is intended to create buttons for new/custom selectors.
    For example:

    ```
    [role="button"] {
        @include f__button;
    }
    ```

    rather than:

    ```
        .btn--affirmative {
            @include f__button(<text-color>, <bg-color>);
        }
    ```

    Note - because of this, think about removing parameters (it changed from my original intention -
    I may change it back or split this into 2 mixins, or even just move things that are meant for
    input[type="button"] to that ruleset - actually that's not a bad idea).

*/
/*
    1. Remove the tapping delay from clickable elements.

    Sort out the height of buttons. At 12px spacing, should be 30px high with 3px top/bottom margin.
    Note Edge doesn't like: `line-height: calc(3rem - 2px)` if `display: inline-flex`
    FF8 - ? doesn't like `line-height: -moz-calc()` and ignores
    Need to make sure height is governed by line-height in case of breaks within buttons.
*/
/*
    Uni-directional margins (bottom) is fine for most cases, but things like figcaptions that may
    contain parapgraphs can result in double bottom margins, so flipping that around inside those
    containers.
*/
/*! Start CSS Icons. See SCSS file for documentation. */
/*------------------------------------------------------------------------------------------------*\

    Icons

\*------------------------------------------------------------------------------------------------*/
/*

    This default icon set used Feather Icons (https://feathericons.com/)
    If you want to use a different icon set, omit the @import declaration for this file and replace
    it with a custom one.

    <!-- At the top of each page: -->
    <svg xmlns="http://www.w3.org/2000/svg" display="none">
        <symbol id="icon-building" viewBox="0 0 24 24">
            <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
            <polyline points="9 22 9 12 15 12 15 22"></polyline>
        </symbol>
        <symbol id="icon-calendar" viewBox="0 0 24 24">
            <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
            <line x1="16" y1="2" x2="16" y2="6"></line>
            <line x1="8" y1="2" x2="8" y2="6"></line>
            <line x1="3" y1="10" x2="21" y2="10"></line>
        </symbol>
        <symbol id="icon-chevron-down" viewBox="0 0 24 24">
            <polyline points="6 9 12 15 18 9"></polyline>
        </symbol>
        <symbol id="icon-chevron-up" viewBox="0 0 24 24">
            <polyline points="18 15 12 9 6 15"></polyline>
        </symbol>
        <symbol id="icon-chevron-left" viewBox="0 0 24 24">
            <polyline points="15 18 9 12 15 6"></polyline>
        </symbol>
        <symbol id="icon-chevron-right" viewBox="0 0 24 24">
            <polyline points="9 18 15 12 9 6"></polyline>
        </symbol>
        <symbol id="icon-cross" viewBox="0 0 24 24">
            <line x1="18" y1="6" x2="6" y2="18"></line>
			<line x1="6" y1="6" x2="18" y2="18"></line>
        </symbol>
        <symbol id="icon-email" viewBox="0 0 24 24">
            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
            <polyline points="22,6 12,13 2,6"></polyline>
        </symbol>
        <symbol id="icon-facebook" viewBox="0 0 24 24">
            <path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path>
        </symbol>
        <symbol id="icon-fax" viewBox="0 0 24 24">
            <path class="st0" d="M6,18H4c-1.1,0-2-0.7-2-1.6v-4c0-0.9,0.9-1.6,2-1.6h16c1.1,0,2,0.7,2,1.6v4c0,0.9-0.9,1.6-2,1.6h-2"/>
            <rect x="6" y="14" class="st0" width="12" height="8"/>
            <path class="st0" d="M6,7.4L4.8,6.2C4.4,5.7,4.4,5,4.8,4.6c0,0,0.1,0,0.1-0.1c1.4-1.1,3-1.9,4.7-2.2c1.6-0.4,3.2-0.4,4.8,0 c1.7,0.4,3.3,1.1,4.7,2.2c0.5,0.4,0.5,1.1,0.1,1.6c0,0,0,0.1-0.1,0.1L18,7.4c-0.4,0.4-1,0.5-1.5,0.1c-0.4-0.3-0.9-0.6-1.4-0.8 c-0.4-0.2-0.7-0.6-0.7-1v-1c-1.6-0.4-3.2-0.4-4.8,0v1c0,0.4-0.3,0.8-0.7,1C8.4,6.9,8,7.2,7.5,7.5C7.1,7.8,6.4,7.8,6,7.4z"/>
        </symbol>
        <symbol id="icon-file" viewBox="0 0 24 24">
            <path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path>
            <polyline points="13 2 13 9 20 9"></polyline>
        </symbol>
        <symbol id="icon-linkedin" viewBox="0 0 24 24">
            <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
            <rect x="2" y="9" width="4" height="12">
            </rect><circle cx="4" cy="4" r="2"></circle>
        </symbol>
        <symbol id="icon-menu" viewBox="0 0 24 24">
            <line x1="3" y1="12" x2="21" y2="12"></line>
			<line x1="3" y1="6" x2="21" y2="6"></line>
			<line x1="3" y1="18" x2="21" y2="18"></line>
        </symbol>
        <symbol id="icon-person" viewBox="0 0 24 24">
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
            <circle cx="12" cy="7" r="4"></circle>
        </symbol>
        <symbol id="icon-phone" viewBox="0 0 24 24">
            <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
        </symbol>
        <symbol id="icon-twitter" viewBox="0 0 24 24">
            <path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>
        </symbol>
     </svg>



    <!-- Where it's needed: -->
    <svg display="none" class="icon" aria-label="Spoken label"><use xlink:href="#icon-triangle-down"></use></svg>
    <!-- Note the aria-label can be removed if equivelent text is already present or the icon is visual only -->

*/
/*
        1. Override display attribute.
        2. FF55- otherwise fill is applied.
    */
.icon {
  display: inline;
  /* [1] */
  fill: none;
  fill-opacity: 0;
  /* [2] */
  stroke: currentColor;
  stroke-width: 2;
  stroke-linecap: round;
  stroke-linejoin: round;
  width: 1.25em;
  height: 1.25em;
  margin: 0;
  padding: 0;
}

_:-o-prefocus, :root .icon {
  vertical-align: middle;
}

.icon-wrap {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

/*! Start CSS Classes. See SCSS file for documentation. */
/*------------------------------------------------------------------------------------------------*\

    Classes

\*------------------------------------------------------------------------------------------------*/
/*
    Resources:
    *
*/
/*
        "Buttons" or "CTAs" that are really links should be distinguished from real buttons, so by
        default we're swapping the foreground and background colors:
    */
a[href].button,
a[href].cta {
  display: inline-block;
  /* AK. IE9 needs this. Hmmm, for what exactly?*/
  min-height: 3rem;
  overflow: visible;
  /* S: Internet Explorer 11-, N: Show the overflow in Edge, Firefox, and IE. */
  margin: 0.3rem 0;
  padding-top: 0.3rem;
  padding-top: -moz-calc(0);
  padding-top: calc(0.3rem - 1px);
  padding-right: 0.6rem;
  padding-bottom: 0.3rem;
  padding-bottom: -moz-calc(0);
  padding-bottom: calc(0.3rem - 1px);
  padding-left: 0.6rem;
  border-color: #247BA0;
  border-style: solid;
  border-width: 1px;
  border-radius: 3px;
  color: #247BA0;
  background-color: #fff;
  font-weight: inherit;
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: 2.4rem;
  vertical-align: middle;
  text-transform: none;
  /* [N0], N: Remove the inheritance of text transform in Edge, Firefox, and IE. */
  cursor: pointer;
  -ms-touch-action: manipulation;
  /* 1 (IE10) */
  touch-action: manipulation;
  /* 1 */
  -webkit-appearance: none;
  /*@if $f__button-focus-outline-width != false {
        &:hover,
        &:active,
        &:focus {
            outline-width: $f__button-focus-outline-width;
            outline-style: $f__button-focus-outline-style;
            outline-color: $f__button-focus-outline-color;
            outline-offset: $f__button-focus-outline-offset;
        }
    }*/
}

a[href].button:hover, a[href].button:active,
a[href].cta:hover,
a[href].cta:active {
  background-color: white;
}

a[href].button:focus,
a[href].cta:focus {
  outline: 0;
  box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.5);
}

a[href].button:hover, a[href].button:active, a[href].button:focus,
a[href].cta:hover,
a[href].cta:active,
a[href].cta:focus {
  background-color: #e4f3f9;
}

a[href].button--has-icon,
a[href].cta--has-icon {
  position: relative;
}

a[href].button--has-icon::after,
a[href].cta--has-icon::after {
  content: "";
  display: inline;
  padding-left: 1.25em;
  line-height: 0;
}

a[href].button--has-icon .icon,
a[href].cta--has-icon .icon {
  position: absolute;
  bottom: 0;
  transform: translateY(-15%);
}

.button[data-text][aria-hidden="true"] {
  display: inline-block;
  /* AK. IE9 needs this. Hmmm, for what exactly?*/
  min-height: 3rem;
  overflow: visible;
  /* S: Internet Explorer 11-, N: Show the overflow in Edge, Firefox, and IE. */
  margin: 0.3rem 0;
  padding-top: 0.3rem;
  padding-top: -moz-calc(0);
  padding-top: calc(0.3rem - 1px);
  padding-right: 0.6rem;
  padding-bottom: 0.3rem;
  padding-bottom: -moz-calc(0);
  padding-bottom: calc(0.3rem - 1px);
  padding-left: 0.6rem;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: solid;
  border-width: 1px;
  border-radius: 3px;
  color: #fff;
  background-color: #247BA0;
  font-weight: inherit;
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: 2.4rem;
  vertical-align: middle;
  text-transform: none;
  /* [N0], N: Remove the inheritance of text transform in Edge, Firefox, and IE. */
  cursor: pointer;
  -ms-touch-action: manipulation;
  /* 1 (IE10) */
  touch-action: manipulation;
  /* 1 */
  -webkit-appearance: none;
  /*@if $f__button-focus-outline-width != false {
        &:hover,
        &:active,
        &:focus {
            outline-width: $f__button-focus-outline-width;
            outline-style: $f__button-focus-outline-style;
            outline-color: $f__button-focus-outline-color;
            outline-offset: $f__button-focus-outline-offset;
        }
    }*/
}

.button[data-text][aria-hidden="true"]:hover, .button[data-text][aria-hidden="true"]:active {
  background-color: #1b5b76;
}

.button[data-text][aria-hidden="true"]:focus {
  outline: 0;
  box-shadow: 0 0 0 3px rgba(36, 123, 160, 0.5);
}

.button[data-text][aria-hidden="true"]::before {
  content: attr(data-text);
}

.bordered {
  border-width: 6px;
  border-style: solid;
  border-color: #247BA0;
  padding-top: 24px;
  padding-top: -moz-calc(24px - 6px);
  padding-top: calc(24px - 6px);
  padding-left: 24px;
  padding-left: -moz-calc(24px - 6px);
  padding-left: calc(24px - 6px);
  padding-right: 24px;
  padding-right: -moz-calc(24px - 6px);
  padding-right: calc(24px - 6px);
}

.bordered::after {
  display: block;
  content: "";
  height: 1px;
  margin-top: 24px;
  margin-bottom: -1px;
  margin-bottom: -moz-calc(-1px - 6px);
  margin-bottom: calc(-1px - 6px);
}

.padded {
  border-width: 0px;
  border-style: solid;
  border-color: #247BA0;
  padding-top: 2.4rem;
  padding-top: -moz-calc(2.4rem - 0px);
  padding-top: calc(2.4rem - 0px);
  padding-left: 2.4rem;
  padding-left: -moz-calc(2.4rem - 0px);
  padding-left: calc(2.4rem - 0px);
  padding-right: 2.4rem;
  padding-right: -moz-calc(2.4rem - 0px);
  padding-right: calc(2.4rem - 0px);
}

.padded::after {
  display: block;
  content: "";
  height: 1px;
  margin-top: 2.4rem;
  margin-bottom: -1px;
  margin-bottom: -moz-calc(-1px - 0px);
  margin-bottom: calc(-1px - 0px);
}

/*
        1. Prevent element increasing height of parent.
    */
b.subtitle {
  font-size: 0.8em;
  font-weight: inherit;
  font-style: normal;
  line-height: 1;
  /* 1 */
}

/*
        1. Negate heading margin.
    */
p.subtitle {
  font-size: 1.5em;
  font-weight: inherit;
  margin-top: -1.2rem;
  /* 1 */
}

/*
        1. Negate heading margin.
    */
.tagline {
  font-size: 1.14285714286em;
  margin-top: -1.2rem;
  /* 1 */
}

/*
        1. Collapse whitespace.
        2. Prevent extra height being added.
    */
.composite {
  display: -webkit-inline-box;
  /* 1 */
  display: -ms-inline-flexbox;
  /* 1 */
  display: inline-flex;
  /* 1 */
  vertical-align: middle;
  /* 2 */
  max-width: 100%;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

/*
        1. Prevent extra height being added.
    */
.composite > * {
  vertical-align: top;
  /* 1 */
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
}

/*
        IE9

        1. Make sure there are no spaces between elements in the markup as the as the white space won't
           collapse.

        2. Hide button.
    */
@media screen and (min-width: 0\0) and (min-resolution: 0.001dpcm) {
  .composite {
    display: inline-block;
    /* 1 */
    white-space: nowrap;
    /* 1 */
    overflow: hidden;
    /* 2 */
  }
  .composite > * {
    vertical-align: top;
    display: inline-block;
  }
}

.composite > *:not(:first-child) {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.composite > *:not(:last-child) {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
  border-right: 0 !important;
}

/* CUSTOM INPUTS: RADIOS AND CHECKBOXES */
/* Hide the real inputs: */
/* (note this method is important to persist accessibility and keyboard navigation) */
.custom-input[type="checkbox"],
.custom-input[type="radio"] {
  position: absolute;
  opacity: 0;
}

/* Prepare for positioning the pseudo-elements: */
.custom-input-label {
  position: relative;
  vertical-align: top;
  /*display: -webkit-inline-flex;
        display: -ms-inline-flexbox;
        display: inline-flex;
        -webkit-align-items: center;
             -ms-flex-align: center;
               align-items: center;*/
  padding-left: 1.5em;
}

.custom-input:focus + .custom-input-label::before {
  box-shadow: 0 0 0 2px #52b0d8;
  outline: 0;
}

/* Common psuedo-element styles: */
.custom-input[type="checkbox"] + .custom-input-label::before,
.custom-input[type="radio"] + .custom-input-label::before {
  display: inline-block;
  content: "";
  width: 1em;
  height: 1em;
  background: #ccc;
  border-radius: 2px;
  position: absolute;
  left: 0;
  top: 50%;
  -webkit-transform: translate(0px, -53%);
  -ms-transform: translate(0px, -53%);
  transform: translate(0px, -53%);
}

/* Make the radio elements circular: */
.custom-input[type="radio"] + .custom-input-label::before {
  border-radius: 50%;
}

/* Define the checkbox :checked state: */
.custom-input[type="checkbox"]:checked + .custom-input-label::before {
  background: #247BA0;
}

/* Define the checkbox 'tick': */
.custom-input[type="checkbox"]:checked + .custom-input-label::after {
  content: "";
  display: inline-block;
  width: 0.6em;
  height: 0.3em;
  border: solid #fff;
  border-width: 0 0 0.2em 0.2em;
  position: absolute;
  left: 0.22em;
  top: 50%;
  -webkit-transform: translate(0px, -80%) rotate(-50deg);
  -ms-transform: translate(0px, -80%) rotate(-50deg);
  transform: translate(0px, -80%) rotate(-50deg);
}

/* Define the radio 'dot': */
.custom-input[type="radio"]:checked + .custom-input-label::before {
  background: #fff;
  border-color: #247BA0;
  border-width: 0.25em;
  border-style: solid;
}

/* Adjustments for end (right) alignment: */
.custom-input--align-end[type="checkbox"] + .custom-input-label,
.custom-input--align-end[type="radio"] + .custom-input-label {
  padding-left: 0;
  padding-right: 1.5em;
}

.custom-input--align-end[type="checkbox"] + .custom-input-label::before,
.custom-input--align-end[type="radio"] + .custom-input-label::before {
  left: auto;
  right: 0;
}

.custom-input--align-end[type="checkbox"]:checked + .custom-input-label::after {
  left: auto;
  right: 0.16em;
}

/* CUSTOM INPUTS: FILE */
/* -webkit hide the button: */
.custom-input[type="file"]::-webkit-file-upload-button {
  border: 0;
  padding: 0;
  margin: 0;
  width: 0;
  background: transparent;
}

/* Firefox hide the button: */
@supports (-moz-appearance: meterbar) {
  .custom-input[type=file] {
    text-indent: -5.6em;
    padding-right: 0.375rem;
  }
}

/* IE10-11, Edge hide the button: */
.custom-input[type=file]::-ms-browse {
  padding: 0;
  margin: -1px;
  width: 0;
  border: 0;
  background: transparent;
}

/* IE9 hide the button: (https://jeffclayton.wordpress.com/2014/07/22/internet-explorer-css-hacks-collection/) */
@media screen and (min-width: 0\0) and (min-resolution: 0.001dpcm) {
  /*
                So far I haven't managed to get this arrangement working properly in IE9, so hiding it:
            */
  .button + .custom-input[type=file] {
    margin-left: -5.35em;
  }
  .custom-input[type="file"] + .button {
    min-width: 7em;
    margin-left: -7em;
    text-align: center;
  }
}

.poem {
  font-family: cursive;
  background: #fff;
  overflow: auto;
  margin-bottom: 2.4rem;
}

/*! Start CSS Experimental. See SCSS file for documentation. */
/*------------------------------------------------------------------------------------------------*\

    Experimental

\*------------------------------------------------------------------------------------------------*/
/*
    From https://github.com/mozdevs/cssremedy/blob/master/remedy.css
    Immediately jump any animation to the end point if the user has set their device to "prefers 
    reduced motion".
    This could create bad, unintended consequences. Remove as needed, and write your own appropriate
    code for prefers-reduced-motion.
    
*/
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.001s !important;
    transition-duration: 0.001s !important;
  }
}

/*
    MS pseudo-elements.

    Note - there's some odd spacing issues between the containing element and the pseudo-elements,
    where background colors can show through unexpectedly, so there are some tweaks to rectify
    this.
*/
[type="file"]::-ms-value {
  margin-right: 0;
  margin-left: -6px;
  padding-left: 0.5em;
  border: 0;
  border-radius: 3px;
  background: #fff;
}

@supports (-ms-ime-align: auto) {
  [type="file"]::-ms-value {
    background: transparent;
  }
}

[type="file"]:focus::-ms-value {
  box-shadow: true;
  outline: 0;
}

/*
    1. IE10 doesn't like rem so convert to px.
*/
[type="file"]::-ms-browse {
  min-height: 3rem;
  padding-right: 0.6rem;
  padding-right: 6px\9;
  /* 1 */
  padding-left: 0.6rem;
  padding-left: 6px\9;
  /* 1 */
  border-width: 0 0 0 1px;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.2);
  border-top-right-radius: 2px;
  border-bottom-right-radius: 2px;
  color: #fff;
  background-color: #247BA0;
  font-weight: inherit;
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
  text-transform: none;
  cursor: pointer;
}

[type="file"]:hover::-ms-browse,
[type="file"]:active::-ms-browse,
[type="file"]:focus::-ms-browse {
  box-shadow: true;
  outline: 0;
}

/*
    1. Spacing height + 2 sets of input padding, minus border width.
*/
[type="file"]::-webkit-file-upload-button {
  height: calc(3rem - 2px);
  /* 1 */
  padding-top: 0;
  padding-right: 0.6rem;
  padding-bottom: 0;
  padding-left: 0.6rem;
  border-width: 0 1px 0 0;
  border-style: solid;
  border-color: rgba(0, 0, 0, 0.2);
  border-radius: 0;
  color: #fff;
  background-color: #247BA0;
  font-weight: inherit;
  font-style: inherit;
  font-size: inherit;
  font-family: inherit;
  vertical-align: top;
  text-transform: none;
  cursor: pointer;
  -webkit-appearance: none;
}

[type="file"]:hover::-webkit-file-upload-button,
[type="file"]:active::-webkit-file-upload-button,
[type="file"]:focus::-webkit-file-upload-button {
  box-shadow: true;
  outline: 0;
}

/*
    Safari refuses to adjust the height of select[multiple] options.
    The only way I've managed to get it to adhere to the vertical rhythm is by adjust the font-size
    on the select:
    select[multiple] {
        font-size: 20px;
        margin-bottom: 8px;
    }

    This is no good, of course as it makes the text HUGE. Scaling it back with transform works:

        transform-origin: top;
        transform: scale(0.7);

    but of course the gaps around it are huge as well.

    Hand-adjusting margins here so I can test the rest of the elements on grid properly and moving
    on:
*/
/*
_:scope, _:future, _:not(*:root), select[size="2"]  { margin-bottom: 0; }
_:scope, _:future, _:not(*:root), select[size="3"]  { margin-bottom: 0; }
_:scope, _:future, _:not(*:root), select[size="4"]  { margin-bottom: 0; }
_:scope, _:future, _:not(*:root), select[size="5"]  { margin-bottom: calc(0.9rem - 2px); }
_:scope, _:future, _:not(*:root), select[size="6"]  { margin-bottom: calc(0.4rem - 2px); }
_:scope, _:future, _:not(*:root), select[size="7"]  { margin-bottom: calc(1.1rem - 2px); }
_:scope, _:future, _:not(*:root), select[size="8"]  { margin-bottom: calc(0.6rem - 2px); }
_:scope, _:future, _:not(*:root), select[size="9"]  { margin-bottom: calc(1.3rem - 2px); }
_:scope, _:future, _:not(*:root), select[size="10"] { margin-bottom: calc(0.8rem - 2px); }
*/
_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="2"] {
  margin-bottom: calc(2.4rem - 0.6em - 2px);
}

_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="3"] {
  margin-bottom: calc(2.4rem - 0.6em - 2px);
}

_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="4"] {
  margin-bottom: calc(2.4rem - 0.6em - 2px);
}

_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="5"] {
  margin-bottom: calc(2.4rem - 1.1em - 2px);
}

_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="6"] {
  margin-bottom: calc(2.4rem - 0.85em - 2px);
}

_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="7"] {
  margin-bottom: calc(2.4rem - 0.6em - 2px);
}

_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="8"] {
  margin-bottom: calc(2.4rem - 1.1em - 2px);
}

_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="9"] {
  margin-bottom: calc(2.4rem - 0.85em - 2px);
}

_:-webkit-full-screen, _::-webkit-full-page-media, _:future, :root select[size="10"] {
  margin-bottom: calc(2.4rem - 0.6em - 2px);
}

/*
@media screen and (-webkit-min-device-pixel-ratio:0) and (min-resolution:.001dpcm) {
    select[size] { margin-bottom: calc(0.9rem - 2px); }
}
*/
/*
    Similar problem with IE9-11:
*/
/* IE9-11 */
@media screen and (min-width: 0\0) and (min-resolution: +72dpi) {
  select[size="2"] {
    margin-bottom: calc(2.4rem - 1.1em - 2px);
  }
  select[size="3"] {
    margin-bottom: calc(2.4rem - 0.75em - 2px);
  }
  select[size="4"] {
    margin-bottom: calc(2.4rem - 1.25em - 2px);
  }
  select[size="5"] {
    margin-bottom: calc(2.4rem - 0.95em - 2px);
  }
  select[size="6"] {
    margin-bottom: calc(2.4rem - 0.65em - 2px);
  }
  select[size="7"] {
    margin-bottom: calc(2.4rem - 1.1em - 2px);
  }
  select[size="8"] {
    margin-bottom: calc(2.4rem - 0.75em - 2px);
  }
  select[size="9"] {
    margin-bottom: calc(2.4rem - 1.25em - 2px);
  }
  select[size="10"] {
    margin-bottom: calc(2.4rem - 0.95em - 2px);
  }
}

/*
    These may be experimental, but they actually make Safari usable with a keyboard, so long as
    you enable an "Accessibility" setting located in the advanced tab of Safari preferences.
    ("Press TAB to highlight each item on a web page.)
    That is - the default outline focus style works, but shadows don't unless appearance: none
    is used.
    
    1. Safari 9.1 doesn't recognize 'auto' but I suspect others won't recognize 'initial', so
       keeping both for now.
*/
@supports (-webkit-appearance: none) or (-moz-appearance: none) {
  input[type="checkbox"],
  input[type="radio"] {
    position: relative;
    display: inline-block;
    width: 1em;
    height: 1em;
    min-height: auto;
    /* 1 */
    min-height: initial;
    /* 1 */
    border-width: 1px;
    border-style: solid;
    border-color: #333;
    background-color: #fff;
    -webkit-appearance: none;
    -moz-appearance: none;
  }
  input[type="radio"] {
    border-radius: 50%;
  }
  input[type="radio"]:checked {
    background-image: -moz-radial-gradient(center, ellipse cover, #333333 0%, #333333 35%, rgba(0, 0, 0, 0) 35%, rgba(0, 0, 0, 0) 100%);
    /* FF3.6-15 */
    background-image: -webkit-radial-gradient(center, ellipse cover, #333333 0%, #333333 35%, rgba(0, 0, 0, 0) 35%, rgba(0, 0, 0, 0) 100%);
    /* Chrome10-25,Safari5.1-6 */
    background-image: radial-gradient(ellipse at center, #333333 0%, #333333 35%, rgba(0, 0, 0, 0) 35%, rgba(0, 0, 0, 0) 100%);
    /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  }
  input[type="checkbox"]:checked::after {
    content: "";
    display: inline-block;
    width: 0.6em;
    height: 0.3em;
    border: solid #333;
    border-width: 0 0 0.125em 0.125em;
    position: absolute;
    left: 50%;
    top: 50%;
    -webkit-transform: translate(-50%, -70%) rotate(-50deg);
    -ms-transform: translate(-50%, -70%) rotate(-50deg);
    transform: translate(-50%, -70%) rotate(-50deg);
  }
  /*
            Turn off the outline we reinstated for non-experimental styles in Safari:
        */
  _::-webkit-full-page-media, _:future, :root [type="checkbox"]:focus,
  _::-webkit-full-page-media, _:future, :root [type="radio"]:focus {
    outline: 0;
  }
}

/*
        Turn off checkbox styling for Edge for now.
    */
@supports (-ms-ime-align: auto) {
  input[type="checkbox"] {
    -webkit-appearance: checkbox;
  }
}

/*
        Turn off checkradio styling for UCBrowser for now.
    */
.ucbrowser input[type="checkbox"] {
  min-height: 0;
  -webkit-appearance: checkbox;
}

.ucbrowser input[type="radio"] {
  min-height: 0;
  -webkit-appearance: radio;
}
